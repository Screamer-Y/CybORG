from CybORG.Shared import Observation
from CybORG.Simulator.Actions import Action
from CybORG.Simulator.Session import VelociraptorServer
from CybORG.Simulator.State import State
from ipaddress import IPv4Address
from CybORG.Shared import AgentInterface
from CybORG.Simulator.Actions.AbstractActions.Remove import Remove
from CybORG.Simulator.Actions.AbstractActions.EraseIP import EraseIP
from CybORG.Simulator.AbstractVulnerability import AbstractVulnerability


class RollBackVulnerability(Action):
    def __init__(self, session: int, agent: str, absvul:AbstractVulnerability):
        super().__init__()
        self.agent = agent
        self.session = session
        self.absvul = absvul
        self.agent_interface = self.absvul.environment_controller.agent_interfaces['Red']

    def execute(self, state: State) -> Observation:
        # TODO: 写好obs，其实如restore一样不应返回什么信息，因为vul不可知
        if self.absvul.outcome == AbstractVulnerability.Outcome.IP_DISCOVERED:
            sub_action = EraseIP(self.session,self.agent,self.absvul.target_host_id, self.agent_interface)
            obs = sub_action.execute(state)
        elif self.absvul.outcome == AbstractVulnerability.Outcome.SERVICE_EXPLOITED:
            sub_action = Remove(self.session, self.agent, self.absvul.target_host_id)
            obs = sub_action.execute(state)
        self.absvul.exploited = False
        return obs

    def __str__(self):
        return f"{self.__class__.__name__} {self.absvul.vulnerability_id}"
